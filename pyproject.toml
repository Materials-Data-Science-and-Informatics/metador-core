[tool.poetry]
name = "metador-core"
version = "0.1.0"
description = "Metador core library providing container and plugin interfaces."
authors = ["a.pirogov <a.pirogov@fz-juelich.de>"]
repository = "https://github.com/Materials-Data-Science-and-Informatics/metador-core"
license = "MIT"

[tool.poetry.dependencies]
python = "^3.8"
h5py = "^3.6.0"
toml = "^0.10.2"
typing-extensions = "^4.1.1"
pydantic = "^1.9.0"
jsonschema = "^4.4.0"
pydantic-yaml = {extras = ["ruamel"], version = "^0.6.3"}
importlib-metadata = "^4.11.4"
wrapt = "^1.14.1"
# for common schemas/types:
Pint = "^0.18"
# for example packer:
Pillow = "^9.1.1"
python-magic = "^0.4.25"
pandas = "^1.4.1"
# widgets/dashboard:
panel = "^0.13.1"
Flask = "^2.1.3"
lazy-object-proxy = "^1.7.1"

[tool.poetry.dev-dependencies]
pre-commit = "^2.17.0"
pytest = "^7.0.1"
pytest-cov = "^3.0.0"
pdoc = "^10.0.3"

[tool.poetry.plugins.metador_plugin_group]
# Metador supports defining custom validated plugin groups.
# Here we define the default entities used in Metador.
# For each declared group, plugins can be defined via entrypoints.
schema = "metador_core.schema.plugingroup:PGSchema"
packer = "metador_core.packer.plugingroup:PGPacker"
widget = "metador_core.widget:PGWidget"

[tool.poetry.plugins.metador_schema]
# Metador is build around pluggable metadata schemas.
# This one needed for configuring the dashboard for a container:
dashboard_meta = "metador_core.widget.dashboard:DashboardMeta"
# This one is mandatory for containers packed by a packer plugin:
packer_info = "metador_core.packer.interface:PackerInfo"
# These are optional and can be used freely, e.g. by some packer:
common_file  = "metador_core.schema.common:FileMeta"
common_image = "metador_core.schema.common:ImageMeta"
common_table = "metador_core.schema.common:TableMeta"

[tool.poetry.plugins.metador_widget]
common_image = "metador_core.widget.common:ImageWidget"

[tool.poetry.plugins.metador_packer]
# You can use the example packer plugin as a template for
# creating your own packer plugins for different use-cases.
example = "metador_core.packer.example:ExamplePacker"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# pytest.ini replacement (pytest >= 6.0)
[tool.pytest.ini_options]
addopts = "--cov-report=term-missing:skip-covered"
filterwarnings = [
    "ignore::PendingDeprecationWarning:ruamel.yaml.*",
    "ignore::PendingDeprecationWarning:pydantic_yaml.*"
]

# .coveragerc replacement
[tool.coverage.run]
source = ['metador_core']
