[tool.poetry]
name = "metador-core"
version = "0.0.2"
description = "Core of Metador, the metadata-first research data management framework."
authors = ["Anton Pirogov <a.pirogov@fz-juelich.de>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/Materials-Data-Science-and-Informatics/metador-core"
homepage = "https://github.com/Materials-Data-Science-and-Informatics/metador-core"
documentation = "https://github.com/Materials-Data-Science-and-Informatics/metador-core"
keywords = ["metadata", "rdm", "FAIR", "framework"]
classifiers = [
    "Operating System :: POSIX :: Linux",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]

[tool.poetry.dependencies]
python = "^3.8"
h5py = "^3.6.0"
toml = "^0.10.2"
typing-extensions = "^4.1.1"
pydantic = "^1.10.2"
jsonschema = "^4.4.0"
pydantic-yaml = {extras = ["ruamel"], version = "^0.6.3"}
importlib-metadata = "^4.11.4"
wrapt = "^1.14.1"
# for common schemas/types:
isodate = "^0.6.1"
Pint = "^0.18"
# for example packer:
Pillow = "^9.1.1"
python-magic = "^0.4.25"
pandas = "^1.4.1"
# widgets/dashboard:
panel = "^0.14.0"
Flask = "^2.1.3"
overrides = "^7.0.0"
phantom-types = "^0.17.1"
simple-parsing = "^0.0.20"
typing-utils = "^0.1.0"
frozendict = "^2.3.4"

[tool.poetry.dev-dependencies]
pre-commit = "^2.17.0"
pytest = "^7.0.1"
pytest-cov = "^3.0.0"
pdoc = "^10.0.3"
hypothesis = "^6.58.0"

[tool.poetry.plugins.metador_plugingroup]
# Metador supports defining custom validated plugin groups.
# Here we define the default entities used in Metador.
# For each declared group, plugins can be defined via entrypoints.
'schema__0.1.0' = "metador_core.schema.pg:PGSchema"
'harvester__0.1.0' = "metador_core.harvester:PGHarvester"
'packer__0.1.0' = "metador_core.packer:PGPacker"
'widget__0.1.0' = "metador_core.widget:PGWidget"

[tool.poetry.plugins.metador_schema]
# Metador is build around pluggable metadata schemas.
# This one is mandatory for containers packed by a packer plugin:
'core.packerinfo__0.1.0' = "metador_core.packer:PackerInfo"
# These are optional and can be used freely, e.g. by some packer:
'core.file__0.1.0' = "metador_core.schema.common.rocrate:FileMeta"
'core.dir__0.1.0' = "metador_core.schema.common.rocrate:DirMeta"
'core.bib__0.1.0' = "metador_core.schema.common:BibMeta"
'core.imagefile__0.1.0' = "metador_core.schema.common:ImageFileMeta"
'core.table__0.1.0' = "metador_core.schema.common:TableMeta"
# This one needed for configuring the generic dashboard for a container:
'core.dashboard__0.1.0' = "metador_core.widget.dashboard:DashboardMeta"

[tool.poetry.plugins.metador_harvester]
'core.file.generic__0.1.0' = "metador_core.harvester.common:FileMetaHarvester"
'core.imagefile.dim__0.1.0' = "metador_core.harvester.common:ImageFileMetaHarvester"

[tool.poetry.plugins.metador_widget]
'core.file.text.md__0.1.0'    = "metador_core.widget.common:MarkdownWidget"
'core.file.text.html__0.1.0'  = "metador_core.widget.common:HTMLWidget"
'core.file.text.code__0.1.0'  = "metador_core.widget.common:CodeWidget"
'core.file.text__0.1.0'  = "metador_core.widget.common:TextWidget"
'core.file.json__0.1.0'  = "metador_core.widget.common:JSONWidget"
'core.file.pdf__0.1.0'   = "metador_core.widget.common:PDFWidget"
'core.file.image__0.1.0' = "metador_core.widget.common:ImageWidget"
'core.file.audio__0.1.0' = "metador_core.widget.common:AudioWidget"
'core.file.video__0.1.0' = "metador_core.widget.common:VideoWidget"

[tool.poetry.plugins.metador_packer]
'core.generic__0.1.0' = "metador_core.packer.example:GenericPacker"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# pytest.ini replacement (pytest >= 6.0)
[tool.pytest.ini_options]
addopts = "--cov-report=term-missing:skip-covered"
filterwarnings = [
    "ignore::PendingDeprecationWarning:ruamel.yaml.*",
    "ignore::PendingDeprecationWarning:pydantic_yaml.*",
    "ignore::PendingDeprecationWarning:metador_core.schema.base",
    "ignore::DeprecationWarning:importlib_metadata.*"
]

# .coveragerc replacement
[tool.coverage.run]
source = ['metador_core']
